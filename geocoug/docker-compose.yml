---
version: "3.8"

services:
  caddy:
    image: caddy:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - /home/cgrant/github:/srv
      - caddy_data:/data
      - caddy_config:/config

  postgis:
    image: kartoza/postgis:15-3.3
    ports:
      - 5432:5432
    restart: always
    environment:
      PGSSENCMODE: disable
      POSTGRES_DBNAME: $POSTGRES_DBNAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - pg_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 15s
      timeout: 5s
      retries: 5

  pg_backup:
    image: kartoza/pg-backup:15-3.3
    restart: always
    volumes:
      - pg_backups:/backups
    environment:
      POSTGRES_HOST: postgis
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: $POSTGRES_DBNAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASS: $POSTGRES_PASSWORD
      REMOVE_BEFORE: 90
    depends_on:
      - postgis

  pg_tileserv:
    image: pramsey/pg_tileserv:20230210
    environment:
      DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgis:5432/$POSTGRES_DBNAME
    depends_on:
      - postgis
    ports:
      - 7800:7800
    restart: always

  chatbot:
    build:
      context: ../chatbot
      dockerfile: Dockerfile
    volumes:
      - ../chatbot:/usr/local/app
    ports:
      - 8087:8087
    restart: always

  django:
    build:
      context: ../health
      dockerfile: Dockerfile
    volumes:
      - ../../health:/usr/local/app
    ports:
      - 8086:8086
    restart: always

volumes:
  pg_data:
  pg_backups:
  caddy_data:
  caddy_config:
